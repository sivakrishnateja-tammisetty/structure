Structure: It is a user-defined datatype and it can hold  different datatypes within structure.
.sizeof(structure) =total no of  members of structure.
.structure used with functions and arrays





#include <iostream>
using namespace std;
struct Employee
{
    string name;
    int age;
    public:
    
};
int main()
{
    Employee e1;
    e1.name="siva";
    e1.age=20;
    cout<<e1.name<<endl;
    cout<<e1.age<<endl;
    return 0;
}






                                            //using functions

#include <iostream>
using namespace std;
struct Complex
{
    
   int real,img;
    
};
Complex add(Complex,Complex);

int main()
{
   Complex a,b,c;
   cout<<"Enter real & imaginary numbers:"<<endl;
   cin>>a.real>>a.img;
   cin>>b.real>>b.img;
   c=add(a,b);
   cout<<c.real<<" +i"<<c.img<<endl;
   

    return 0;
}
Complex add(Complex a,Complex b)
{
    Complex out;
    out.real=a.real+b.real;
    out.img=a.img+b.img;
    return out;
}




                                          //USING ARRAYS


                                          #include <iostream>
using namespace std;
struct Employee
{
    
   string name;
   int age;
    
};

int main()
{
    int n;
    cout<<"Enter no.of employees:";
    cin>>n;
    Employee e[n];
    for(int i=0;i<n;i++)
    {
        cout<<"Enter details:"<<endl;
        cin>>e[i].name>>e[i].age;
    }
    for(int i=0;i<n;i++)
    {
        
        cout<<"Name : "<<e[i].name<<"->"<<"Age : "<<e[i].age<<endl;
    }

    return 0;
}
